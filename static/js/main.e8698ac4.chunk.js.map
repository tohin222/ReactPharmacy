{"version":3,"sources":["components/medicine/TextInputGroup.js","components/Login.js","components/Dashboard.js","components/Preview.js","store/actions/shopAction.js","store/actions/types.js","components/Home.js","store/actions/medicineAction.js","components/shop/Shop.js","components/medicine/Medicine.js","components/Recipe.js","components/Cart.js","App.js","serviceWorker.js","store/reducers/medicineReducer.js","store/reducers/shopReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["TextInputGroup","name","value","placeholder","type","onChange","error","className","classnames","defaultProps","Login","state","id","password","errors","onSubmit","e","preventDefault","props","history","push","setState","myChange","target","this","React","Component","Dashboard","src","height","width","alt","to","Preview","selectedStoreName","selectedSession","address","newshop","uuid","add_shop","console","log","style","color","hover","textDecoration","textAlign","connect","shop","payload","Home","handleClick","addToCart","items","scope","map","item","key","title","price","quantity","onClick","medicine","dispatch","Shop","get_shop","shops","Medicine","class","Recipe","handleChecked","checked","addShipping","substractShipping","myOnChange","qnty","qnty_update","refs","shipping","ref","total","addedItems","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","cursor","App","exact","path","component","Boolean","window","location","hostname","match","initState","medicineReducer","action","addedItem","find","existed_item","newTotal","itemToRemove","new_items","filter","initialState","shopReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8698ac4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport TextInputGroup from './medicine/TextInputGroup';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        id:'',\r\n        password: '',\r\n        errors: {}\r\n      };\r\n      onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {  id ,password } = this.state;\r\n        if (id === '') {\r\n            this.setState({ errors: { id: 'id is required' } });\r\n            return;\r\n          }\r\n          if (password === '') {\r\n            this.setState({ errors: { password: 'password is required' } });\r\n            return;\r\n          }\r\n          \r\n        else{\r\n            if (id === '1234' && password === '1234') {\r\n                this.props.history.push('/Dashboard');\r\n              }\r\n             else{\r\n                this.setState({ errors: { \r\n                    id: 'id is required',\r\n                    password: 'password is required',\r\n                 } });\r\n                return;\r\n             }\r\n          \r\n        }\r\n      };\r\n      myChange= e =>{\r\n        this.setState({\r\n          [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { id,password,errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"bpl_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"bpl\">MyBPL</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"MPE ID\" /> */}\r\n                                        <TextInputGroup\r\n                                            name=\"id\"\r\n                                            placeholder=\"Enter MPE ID\"\r\n                                            value={id}\r\n                                            onChange={this.myChange}\r\n                                            error={errors.id}\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" /> */}\r\n                                <TextInputGroup\r\n                                type=\"password\"\r\n                                  name=\"password\"\r\n                                  placeholder=\"Enter Password\"\r\n                                  value={password}\r\n                                  onChange={this.myChange}\r\n                                  error={errors.password}\r\n                                  />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary myButton\" /> \r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <p>Id: 1234</p>\r\n                                        <p>Password: 1234</p>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"das_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 d_header\">\r\n\r\n                                <div className=\"d_logo\">\r\n                                    <img src=\"images/Pure-Pharmacy-Logo.png\" height=\"40\" width=\"60\" alt=\"\" /> <br />\r\n                                    <p>MPI ID: 1485547485</p>\r\n                                </div>\r\n                                <div className=\"d_logo\"><i className=\"fa fa-bell\"></i> <br /> Notifications</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row d_chart_1\">\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"m\">\r\n                                    <Link to=\"/Preview\">\r\n                                    <i className=\"fas fa-chart-line fa-5x mt-5 mb-3\"></i>\r\n                                    </Link>\r\n                                    <p>mSales</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"m\">\r\n                                <i className=\"fas fa-chart-bar fa-5x mt-5 mb-3\"></i>\r\n                                    <p>mExpense</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3 d_chart_1\">\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"m\">\r\n                                <i className=\"fas fa-globe fa-5x mt-5 mb-3\"></i>\r\n                                    <p>Web View</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"m\">\r\n                                    <Link to=\"/\">\r\n                                        <i className=\"fas fa-sign-out-alt fa-5x mt-5 mb-3\"></i>\r\n                                    </Link>\r\n                                    <p>Logout</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Link } from 'react-router-dom'\r\nimport {add_shop} from '../store/actions/shopAction'\r\nimport {connect}  from 'react-redux'\r\nimport TextInputGroup from './medicine/TextInputGroup';\r\nimport PropTypes from 'prop-types'\r\nimport uuid from 'uuid'\r\n\r\nconst options = [\r\n    { value: 'Sadek Medical Store', label: 'Sadek Medical Store' },\r\n    { value: 'Rafiq Medical Store', label: 'Rafiq Medical Store' },\r\n    { value: 'tohin medical store', label: 'tohin medical store' },\r\n    { value: 'Galib medical store', label: 'Galib medical store' },\r\n  ];\r\n  const sessions = [\r\n    { value: 'Morning', label: 'Morning' },\r\n    { value: 'Evening', label: 'Evening' },\r\n  ];\r\nclass Preview extends React.Component {\r\n    state = {\r\n        selectedStoreName: '',\r\n        selectedSession: '',\r\n        address: '',\r\n        errors: {}\r\n      };\r\n      onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {  selectedStoreName,selectedSession,address  } = this.state;\r\n        if (selectedStoreName === '') {\r\n            this.setState({ errors: { selectedStoreName: 'Name is required' } });\r\n            return;\r\n          }\r\n      \r\n          if (selectedSession === '') {\r\n            this.setState({ errors: { selectedSession: 'Email is required' } });\r\n            return;\r\n          }\r\n      \r\n          if (address === '') {\r\n            this.setState({ errors: { address: 'Phone is required' } });\r\n            return;\r\n          }\r\n        const newshop = {\r\n            id: uuid(),\r\n            selectedStoreName,\r\n            selectedSession,\r\n            address,\r\n            \r\n        };\r\n    this.props.add_shop(newshop)\r\n        //// SUBMIT CONTACT ////\r\n    \r\n        // Clear State\r\n        this.setState({\r\n            selectedStoreName: '',\r\n            selectedSession: '',\r\n            address: '',\r\n            errors: {}\r\n        });\r\n    console.log(newshop)\r\n        this.props.history.push('/Medicine');\r\n      };\r\n    \r\n      myChange= e =>{\r\n          this.setState({\r\n            [e.target.name]: e.target.value\r\n          })\r\n      }\r\n    render() {\r\n        const { selectedStoreName,selectedSession,address,errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"bpl_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\">\r\n                                <Link to=\"/Dashboard\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                MyBPL\r\n                                    </Link>\r\n                                  \r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\"\r\n                                style={{textAlign: 'right'}}\r\n                                >\r\n                                <Link to=\"/Dashboard\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                Back\r\n                                    </Link>\r\n                                  \r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                <TextInputGroup\r\n                                  \r\n                                    name=\"selectedStoreName\"\r\n                                    placeholder=\"Enter Store Name\"\r\n                                    value={selectedStoreName}\r\n                                    onChange={this.myChange}\r\n                                    error={errors.selectedStoreName}\r\n                                    />\r\n                                     <TextInputGroup\r\n                                \r\n                                    name=\"selectedSession\"\r\n                                    placeholder=\"Enter Session\"\r\n                                    value={selectedSession}\r\n                                    onChange={this.myChange}\r\n                                    error={errors.selectedSession}\r\n                                    />\r\n                                      <TextInputGroup\r\n                               \r\n                                    name=\"address\"\r\n                                    placeholder=\"Enter address\"\r\n                                    value={address}\r\n                                    onChange={this.myChange}\r\n                                    error={errors.address}\r\n                                    />\r\n                                {/* <div className=\"form-group\">\r\n                                        <input  type=\"text\"\r\n                                        name=\"selectedStoreName\"\r\n                                         value={selectedStoreName}\r\n                                         onChange={this.myChange}\r\n                                         className=\"form-control\"\r\n                                         placeholder=\"selectedStoreName\" \r\n                                        \r\n                                         />\r\n                                    </div> */}\r\n                                     {/* <div className=\"form-group\">\r\n                                        <input  type=\"text\"\r\n                                        name=\"selectedSession\"\r\n                                         value={selectedSession}\r\n                                         onChange={this.myChange}\r\n                                         className=\"form-control\"\r\n                                         placeholder=\"selectedSession\" \r\n                                        \r\n                                         />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input  type=\"text\"\r\n                                        name=\"address\"\r\n                                         value={address}\r\n                                         onChange={this.myChange}\r\n                                         className=\"form-control\"\r\n                                         placeholder=\"Address\" \r\n                                        \r\n                                         />\r\n                                    </div> */}\r\n                                    <div className=\"form-group w-100\">\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary myButton\" /> \r\n                                        {/* <Link to=\"/Medicine\" className=\"btn btn-primary myButton\">\r\n                                        Medicine\r\n                                    </Link> */}\r\n                                    </div>\r\n                                </form>\r\n                                {/* <div className=\"form-group\">\r\n                                        <Select\r\n                                            value={selectedStoreName}\r\n                                            onChange={this.handleChange}\r\n                                            options={options}\r\n                                            placeholder=\"Select Store Name\"\r\n                                        />    \r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Select\r\n                                            value={selectedSession}\r\n                                            onChange={this.SessionChange}\r\n                                            options={sessions}\r\n                                            placeholder=\"Select Shift\"\r\n                                            \r\n                                        />\r\n                                    </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nPreview.propTypes={\r\n    add_shop: PropTypes.func.isRequired\r\n  }\r\n\r\nexport default connect(null,{add_shop})(Preview);","import {GET_SHOP,ADD_SHOP} from './types'\r\n\r\n\r\n\r\nexport const get_shop= ()=>{\r\n    return{\r\n        type: GET_SHOP\r\n    }\r\n}\r\nexport const add_shop= (shop)=>{\r\n    return{\r\n        type: ADD_SHOP,\r\n        payload: shop\r\n    }\r\n}\r\n\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\nexport const QNTY_UPDATE = 'QNTY_UPDATE';\r\n\r\n\r\n\r\n\r\n\r\nexport const GET_SHOP = 'GET_SHOP'\r\nexport const ADD_SHOP = 'ADD_SHOP'\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../store/actions/medicineAction'\r\n\r\n class Home extends Component{\r\n    \r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id); \r\n    }\r\ncomponentDidMount(){\r\n    console.log(this.props.items);\r\n    \r\n}\r\n    render(){\r\n        let {items} =  this.props\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h3 className=\"center\">Our items</h3>\r\n                <div className=\"box\">\r\n                <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                    <th scope=\"col\">id</th>\r\n                                    <th scope=\"col\">Medicine Name</th>\r\n                                    <th scope=\"col\">Medicine Price</th>\r\n                                    <th scope=\"col\">Medicine Quantity</th>\r\n                                    <th scope=\"col\">Add</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                            items.map(item=>(\r\n                                <tr key={item.id}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.title}</td>\r\n                                    <td>{item.price}</td>\r\n                                    <td>{item.quantity}</td>\r\n                                    <td>\r\n                                    <button to=\"/\" className=\"btn btn-success\" onClick={()=>{this.handleClick(item.id)}}>add</button>\r\n                                    </td>\r\n                                </tr>       \r\n                            ))\r\n                        }\r\n                                   \r\n                                  \r\n                                </tbody>\r\n                                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      items: state.medicine.items\r\n    }\r\n  }\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,QNTY_UPDATE} from './types'\r\n\r\n//add cart action\r\nexport const qnty_update= (id)=>{\r\n    return{\r\n        type: QNTY_UPDATE,\r\n        id\r\n    }\r\n}\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {get_shop} from '../../store/actions/shopAction'\r\nimport {connect}  from 'react-redux'\r\n\r\nclass Shop extends Component {\r\n    componentDidMount(){\r\n        this.props.get_shop()\r\n      }\r\n    render() {\r\n        const {shops} = this.props\r\n        return (\r\n            <div>\r\n                 <div className=\"container mt-3 mb-5\">\r\n                    <div className=\"card text-center\">\r\n                        <div className=\"card-header\">\r\n                        <h2>Shop & Shift</h2>\r\n                        </div>\r\n                    {shops.map(shop => (              \r\n                        <div className=\"card-body\"  key={shop.id}>\r\n                            <h5 className=\"card-title\">Shop Name: {shop.selectedStoreName}</h5>\r\n                            <p className=\"card-text\">Shift: {shop.selectedSession}</p>\r\n                            <p className=\"card-text\">Address: {shop.address}</p>\r\n                            \r\n                        </div>\r\n                        ))}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    shops : state.shops.shops\r\n  })\r\n  \r\nexport default connect(mapStateToProps,{get_shop})(Shop);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Home from '../Home'\r\nimport Shop from '../shop/Shop'\r\n\r\nclass Medicine extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bpl_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\">\r\n                                <Link to=\"/Dashboard\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                MyBPL\r\n                                    </Link>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\"\r\n                                style={{textAlign: 'right'}}\r\n                                >\r\n                                     <Link to=\"/Cart\"\r\n                                style={{color: '#000',hover:'#000',textDecoration: 'none'}}\r\n                                >\r\n                                <i class=\"fas fa-shopping-cart mr-5\"></i>\r\n                                    </Link>\r\n                                    {' '}\r\n                                <Link to=\"/Preview\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                Back\r\n                                    </Link>\r\n                                  \r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                   \r\n                </div>\r\n               <Shop />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <Home />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  \r\nexport default Medicine\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addShipping,qnty_update } from '../store/actions/medicineAction'\r\nclass Recipe extends Component{\r\n    \r\n    componentWillUnmount() {\r\n         if(this.refs.shipping.checked)\r\n              this.props.substractShipping()\r\n    }\r\n\r\n    handleChecked = (e)=>{\r\n        if(e.target.checked){\r\n            this.props.addShipping();\r\n        }\r\n        else{\r\n            this.props.substractShipping();\r\n        }\r\n    }\r\n    myOnChange=e=>{\r\n        const { qnty } = e.target.value\r\n        this.props.qnty_update(qnty)\r\n        // const { qnty } = this.props;\r\n        // qnty(e.target.value)\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n              \r\n                            <div class=\"card\">\r\n                            <div class=\"card-header\">\r\n                                Total Bill\r\n                            </div>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                <li class=\"list-group-item\">\r\n                                <label>\r\n                                <input type=\"checkbox\" ref=\"shipping\" onChange= {this.handleChecked} />\r\n                                <span>With Percentage(.06$)</span>\r\n                            </label>\r\n                                </li>\r\n                                <li class=\"list-group-item\">\r\n                                Total: {this.props.total} $\r\n                                </li>\r\n                            </ul>\r\n\r\n                    </div>\r\n                   \r\n                    \r\n                 </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.medicine.addedItems,\r\n        total: state.medicine.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addShipping: ()=>{dispatch({type: 'ADD_SHIPPING'})},\r\n        substractShipping: ()=>{dispatch({type: 'SUB_SHIPPING'})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Recipe)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeItem,addQuantity,subtractQuantity} from '../store/actions/medicineAction'\r\nimport Recipe from './Recipe'\r\nimport Shop from './shop/Shop'\r\nclass Cart extends Component{\r\n    \r\n    //to remove the item completely\r\n    handleRemove = (id)=>{\r\n        this.props.removeItem(id);\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n//    componentDidMount(){\r\n//       let newItem =  this.props.items\r\n//       console.log(newItem);\r\n     \r\n       \r\n//    }\r\n    // onQuantityChange = (event) => {\r\n    //     this.setState({quantity: event.target.value});\r\n    //   }\r\n    render(){\r\n        let {items} =  this.props\r\n       \r\n       return(\r\n           <div>\r\n                <div className=\"bpl_full\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\">\r\n                                <Link to=\"/Dashboard\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                MyBPL\r\n                                    </Link>                           \r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bpl\"\r\n                                style={{textAlign: 'right'}}\r\n                                >\r\n                                    <Link to=\"/Cart\"\r\n                                style={{color: '#000',hover:'#000',textDecoration: 'none'}}\r\n                                >\r\n                                <i class=\"fas fa-shopping-cart mr-5\"></i>\r\n                                    </Link>\r\n                                    {' '}\r\n                                <Link to=\"/Medicine\"\r\n                                style={{color: '#fff',hover:'#fff',textDecoration: 'none'}}\r\n                                >\r\n                                Back\r\n                                    </Link>\r\n                                  \r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                   \r\n                </div>\r\n               <Shop />\r\n               <div className=\"container\">\r\n                <div className=\"cart\">\r\n                    <h5>You have ordered:</h5>\r\n                    <ul className=\"collection\">\r\n                    <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                    <th scope=\"col\">id</th>\r\n                                    <th scope=\"col\">Medicine Name</th>\r\n                                    <th scope=\"col\">Medicine Price</th>\r\n                                    <th scope=\"col\">Medicine Quantity</th>\r\n                                    <th scope=\"col\">Remove</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                            items.map(item=>(\r\n                                <tr key={item.id}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.title}</td>\r\n                                    <td>{item.price}</td>\r\n                                    <td>\r\n                                    <Link to=\"/cart\"><i class=\"fas fa-plus-square fa-2x\"\r\n                                     onClick={()=>{this.handleAddQuantity(item.id)}}\r\n                                     style={{cursor:'pointer',color: '#9CCC65'}}\r\n                                     ></i></Link>\r\n                            {' '} <span className=\"h2 ml-2 mr-2\">{item.quantity}</span>\r\n                                    {' '}  <Link to=\"/cart\">\r\n                                    <i class=\"fas fa-minus-square fa-2x\" \r\n                                    onClick={()=>{this.handleSubtractQuantity(item.id)}}\r\n                                    style={{cursor:'pointer',color: '#FFB300'}}\r\n                                    ></i>    \r\n                                        </Link>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                    <i class=\"fas fa-trash-alt fa-2x\"\r\n                                     onClick={()=>{this.handleRemove(item.id)}}\r\n                                     style={{cursor:'pointer',color: '#FF5733'}}\r\n                                     ></i>\r\n                                    </td>\r\n                                </tr>       \r\n                            ))\r\n                        }\r\n                                   \r\n                                  \r\n                                </tbody>\r\n                                </table>\r\n                    </ul>\r\n                </div> \r\n                <Recipe />          \r\n            </div>\r\n           </div>\r\n         \r\n       )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.medicine.addedItems,\r\n        \r\n        addedItems: state.medicine.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)","import React from 'react';\nimport Login from './components/Login'\nimport Dashboard from './components/Dashboard'\nimport Preview from './components/Preview'\nimport Medicine from './components/medicine/Medicine'\nimport Home from './components/Home'\nimport Cart from './components/Cart'\nimport Navbar from './components/Navbar'\n\n\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' exact component={Login} />\n          <Route path='/Dashboard' component={Dashboard} />\n          <Route path='/Preview' component={Preview} />\n          <Route path='/Medicine' component={Medicine} />\n          <Route path='/Home' component={Home} />\n          <Route path='/Cart' component={Cart} />\n\n        </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\n// const initialState = {\r\n//     medicines: [\r\n//         {\r\n//             id:1,\r\n//             midicineName: 'Napa',\r\n//             medicinePrice: 4,\r\n//             medicineQuantity: 120\r\n//         },\r\n//         {\r\n//             id:2,\r\n//             midicineName: 'Ace',\r\n//             medicinePrice: 5,\r\n//             medicineQuantity: 220\r\n//         },\r\n//         {\r\n//             id:3,\r\n//             midicineName: 'Ace-Plus',\r\n//             medicinePrice: 3,\r\n//             medicineQuantity: 100\r\n//         },\r\n//     ]\r\n// }\r\n\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING,QNTY_UPDATE } from '../actions/types'\r\n\r\n\r\nconst initState = {\r\n    items: [\r\n        {id:1,title:'Napa',  price:10,quantity:78},\r\n        {id:2,title:'Ace',  price:20,quantity: 58},\r\n        {id:3,title:'Ace-Plus',price:1,quantity: 24},\r\n        {id:4,title:'Peracitamol',  price:2,quantity:14},\r\n        {id:5,title:'Renitin', price:6,quantity: 458},\r\n        {id:6,title:'Neoteck',price:4,quantity: 78}\r\n    ],\r\n    addedItems:[],\r\n    total: 0,\r\n    qnty: 10\r\n\r\n}\r\nconst medicineReducer= (state = initState,action)=>{\r\n    if(action.type ===  QNTY_UPDATE){\r\n        \r\n       return{\r\n        ...state,\r\n        qnty: action.payload\r\n       }\r\n\r\n    }\r\n   \r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n         if(existed_item)\r\n         {\r\n            // addedItem.quantity += 1 \r\n            // addedItem.quantity = this.qnty\r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price\r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type=== ADD_SHIPPING){\r\n          return{\r\n              ...state,\r\n              total: state.total * 1.06\r\n          }\r\n    }\r\n\r\n    if(action.type=== 'SUB_SHIPPING'){\r\n        return{\r\n            ...state,\r\n            total: state.total / 1.06\r\n        }\r\n  }\r\n    \r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default medicineReducer","import {GET_SHOP,ADD_SHOP} from '../actions/types'\r\n\r\nconst initialState = {\r\n    shops: [\r\n       \r\n    ]\r\n}\r\nconst shopReducer = (state = initialState,action)=>{\r\n    if(action.type ===  GET_SHOP){\r\n       return{\r\n        ...state,\r\n       }\r\n\r\n    }\r\n    if(action.type ===  ADD_SHOP){\r\n        return{\r\n         ...state,\r\n         shops: [action.payload,...state.shops]   \r\n        }\r\n \r\n     }\r\n   \r\n    \r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\nexport default shopReducer \r\n\r\n","import {combineReducers} from 'redux'\r\nimport medicineReducer from './medicineReducer'\r\nimport shopReducer from './shopReducer'\r\n\r\n\r\nexport default combineReducers({\r\n     medicine: medicineReducer,\r\n    shops: shopReducer,\r\n})","import {createStore,applyMiddleware,compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer,compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__&&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\nReactDOM.render(   <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}